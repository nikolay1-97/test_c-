using System;
using System.Collections.Generic;
using System.Linq;

class Program
{
    static void Main()
    {
        var a = Console.ReadLine().Split().Select(int.Parse).ToList();
        FindMinMoves(a);
    }

    // проверяет равное ли количество фишек у игроков
    static bool IsEqual(List<int> ls)
    {
        int val = ls[0];
        for (int i = 0; i < ls.Count; i++)
        {
            if (ls[i] != val)
            {
                return false;
            }
        }
        return true;
    }

    static void FindMinMoves(List<int> ls)
    {
        int res = 0;
        double targetValue = ls.Average();
        int minMoves = 0;
        int minMoves2 = 0;
        List<int> indxOfLess = new List<int>();
        List<int> indxOfLarge = new List<int>();
        int indexOfLess = 0;
        int indexOfLarge = 0;
        int cnt = 1;

        while (true)
        {
            if (cnt > 20)
            {
                break;
            }
            Console.WriteLine($"шаг{cnt}: {string.Join(", ", ls)}");
            cnt++;
            bool isEq = IsEqual(ls);
            if (isEq)
            {
                break;
            }

            for (int i = 0; i < ls.Count; i++)
            {
                isEq = IsEqual(ls);
                if (isEq)
                {
                    break;
                }
                if (ls[i] < targetValue)
                {
                    indxOfLess.Add(i);
                }
                if (ls[i] > targetValue)
                {
                    indxOfLarge.Add(i);
                }
            }

            int diff1 = Math.Abs((indxOfLarge[0] + 1) - (indxOfLess[0] + 1));
            int diff2 = Math.Abs(ls.Count - (indxOfLarge[0] + 1)) + (indxOfLess[0] + 1);
            int diff3 = (indxOfLarge[0] + 1) + Math.Abs(ls.Count - (indxOfLess[0] + 1));
            minMoves = Math.Min(diff1, Math.Min(diff2, diff3));

            for (int i = 0; i < indxOfLarge.Count; i++)
            {
                for (int j = 0; j < indxOfLess.Count; j++)
                {
                    diff1 = Math.Abs((indxOfLarge[i] + 1) - (indxOfLess[j] + 1));
                    diff2 = Math.Abs(ls.Count - (indxOfLarge[i] + 1)) + (indxOfLess[j] + 1);
                    diff3 = (indxOfLarge[i] + 1) + Math.Abs(ls.Count - (indxOfLess[j] + 1));
                    minMoves2 = Math.Min(diff1, Math.Min(diff2, diff3));
                    if (minMoves2 <= minMoves)
                    {
                        minMoves = minMoves2;
                        indexOfLess = indxOfLess[j];
                        indexOfLarge = indxOfLarge[i];
                    }
                }
            }

            res += minMoves;
            ls[indexOfLess]++;
            ls[indexOfLarge]--;
            indxOfLess.Clear();
            indxOfLarge.Clear();
        }

        Console.WriteLine($"минимальное число ходов: {res}");
    }
}

